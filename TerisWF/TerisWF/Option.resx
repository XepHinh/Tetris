<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_speaker.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>