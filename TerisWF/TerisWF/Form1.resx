<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        joUIAHLECYAccQIgx50TADniBECOOAGQI04A5IgTADm7cbKtB8DCxAmAHHECIEecAMixEAFAjjgBkCNO
        AOSIEwA5FiIAyBEnAHLECYAccQIgx0IEADniBECOOAGQI04A5FiIACBHnADIEScAcsQJgBwLEQDkiBMA
        OeIEQI44AZBjIQKAHHECIEecAMgRJwByLEQAkCNOAOSIEwA54gRAjjgBkLMbJ9t6ACxMnADIEScAcsQJ
        gBwLEQDkiBMAOeIEQI44AZBjIQKAHHECIEecAMgRJwByLEQAkCNOAOSIEwA54gRAjoUIAHLECYAccQIg
        x50TADniBECOOAGQI04A5IgTADniBEDObpyskgOwMHECIMexHgA54gRAjjgBkCNOAOSIEwA5u3GyrQfA
        wsQJgBxxAiBHnADIsRABQI44AZAjTgDkiBMAORYiAMgRJwByxAmAHHECIMdCBAA54gRAjjgBkCNOAORY
        iAAgR5wAyBEnAHLECYAcCxEA5IgTADniBECOOAGQI04A5OzGybYeAAsTJwByxAmAHHECIMdCBAA54gRA
        jjgBkCNOAORYiAAgR5wAyBEnAHLcOQGQI04A5IgTADniBECOOAGQsxsn23oALEycAMgRJwBy3DkBkCNO
        AOSIEwA54gRAjjgBkLMbJ9t6ACxMnADIEScActw5AZAjTgDkiBMAOeIEQI44AZAjTgDk7MbJKjkACxMn
        AHLECYAcd04A5IgTADniBECOOAGQI04A5OzGybYeAAsTJwByxAmAHHdOAOSIEwA5jvUAyBEnAHIc6wGQ
        I04A5DjWAyBHnADIcawHQI44AZDjWA+AHHECIMexHgA54gRAjjgBkOPOCYAckxMAOeIEQI44AZDjzgmA
        HHECIMexHgA54gRAjmM9AHLECYAcx3oA5IgTADmO9QDIMTkBkCNOAOSIEwA57pwAyDE5AZAjTgDkiBMA
        Oe6cAMgxOQGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgT
        ADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADm7cToXJwCWZXICIEec
        AMgRJwBy3DkBkGNyAiBHnADIEScActw5AZBjcgIgR5wAyBEnAHLECYAccQIgR5wAyBEnAHLECYCc3Tj5
        T7gALMzkBECOOAGQI04A5LhzAiDH5ARAjjgBkCNOAOS4cwIgx+QEQI44AZAjTgDkuHMCIMfkBECOOAGQ
        I04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQ
        I04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQ
        I04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADm7cToXJwCW
        ZXICIEecAMgRJwBy3DkBkGNyAiBHnADIEScActw5AZBjcgIgR5wAyBEnAHLcOQGQY3ICIEecAMgRJwBy
        3DkBkGNyAiBHnADIEScAcsQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScA
        csQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScA
        csQJgBxxAiBHnADIEScAcsQJgBxxAiBHnADIEScAcsQJgJzdOJ2LEwDLMjkBkCNOAOSIEwA57pwAyDE5
        AZAjTgDkiBMAOe6cAMgxOQGQI04A5IgTADnunADIMTkBkCNOAOSIEwA57pwAyDE5AZAjTgDkiBMAOe6c
        AMgxOQGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADni
        BECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADniBECOOAGQI04A5IgTADm7
        cToXJwCWZXICIEecAMgRJwByxAmAHHECIEecAMgRJwByxAmAnN04+U+4ACzM5ARAjjgBkONYD4AccQIg
        x7EeADniBECOYz0AcsQJgBzHegDkiBMAOY71AMgRJwByHOsBkCNOAOQ41gMgR5wAyHGsB0COOAGQ41gP
        gBxxAiDHsR4AOeIEQI44AZDjzgmAHHECIEecAMhx5wRAjjgBkCNOAOSIEwA54gRAzm6cbOsBsDBxAiBH
        nADIcecEQI44AZAjTgDkiBMAOeIEQM5unGzrAbAwcQIgR5wAyHHnBECOOAGQI04A5IgTADniBEDObpxs
        6wGwMHECIEecAMhx5wRAjjgBkCNOAOSIEwA54gRAjjgBkLMbJ6vkACxMnADIEScActw5AZAjTgDkiBMA
        OeIEQI44AZCzGyfbegAsTJwAyBEnAHLcOQGQI04A5IgTADniBECOhQgAcsQJgBxxAiBHnADIsRABQI44
        AZAjTgDkiBMAORYiAMgRJwByxAmAHHECIMdCBAA54gRAjjgBkCNOAOSIEwA5u3GyrQfAwsQJgBxxAiBH
        nADIsRABQI44AZAjTgDkiBMAORYiAMgRJwByxAmAHHdOAOSIEwA54gRAjjgBkCNOAOTsxsm2HgALEycA
        csQJgBx3TgDkiBMAOeIEQI44AZAjTgDk7MbJth4ACxMnAHLECYAcd04A5IgTADniBECOOAGQI04A5OzG
        ybYeAAsTJwByxAmAHHECIMdCBAA54gRAjjgBkCNOAORYiAAgR5wAyBEnAHLECYAcCxEA5IgTADniBECO
        OAGQYyECgBxxAiBHnADIEScAcixEAJAjTgDkiBMAOeIEQI44AZCzGyfbegAsTJwAyBEnAHLECYAcCxEA
        5IgTADniBECOOAGQYyECgBxxAiBHnADIEScAcixEAJAjTgDkiBMAOeIEQI6FCAByxAmAHHECIEecAMix
        EAFAjjgBkCNOAOS4cwIgR5wAyBEnAHLECYAcCxEA5IgTADniBECOOAGQI04A5OzGybYeAAsTJwByxAmA
        HHECIMdCBAA54gRAjjgBkCNOAORYiAAgR5wAyBEnAHLECYAcCxEA5IgTADniBECOOAGQYyECgBxxAiBH
        nADIEScAcixEAJAjTgDkiBMAOeIEQI44AZCzGyfbegAsTJwAyBEnAHLcOQGQI04A5PzJOB3ePr7cbOO0
        fhmnz8UJgO/N3Jen20BdR2p3crr9anLaTHE6neL0xY++GabrL3izdADw7uaWPJmaMg1C2+c3FiKGKU7r
        O/cu1zduTW98sI3Tyf2H42dziJ5MUZrLNr2++cWvxwoA3skUps8fP556MsfpqivbyenwaFxNcZodbI7v
        XQ5znFZXk9P2WG/7j19E6C1Buv4yAHhX28FnG6ZXTbmO03r1YnKa75yGoxvbN+Y7p+2x3lsCJEoAfDfm
        nlw15botn7wZp82dF3Gaxqhh2Iyn9x+8XIb4cvbkx1uvvhQA/h+mpmyvjObro7kv0+uj07Px5je29U4e
        XQ4fHr+cnO7c/nA8e/BwPH948sqDk+m9q9f55/kZAL6NbUde84PJvePj8XCzeTE5bcaD20///vLw/tm4
        Wv3FVKv53mkzHh0dTo7Go2nEOjqcnqfXw+3zZPpsfgaAb2fuyJWjzeH2OG8zh2memuZB6ejGeHD3n391
        efPpT8f19OF69cF2S+J6rHq74S3vAcC7ud7Mu+rOahym12FqzObO3fHgwS9/+z8f/8uvxw+f/HQ8PP54
        XF/X69rw6vn6H37jcwB4F3NXXmvLbJh/3hyNw63j8fD00/H/AEHToDqbp7nTAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>